version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: stock-research-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - stock-research-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock-research-backend
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=${MONGODB_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    networks:
      - stock-research-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stock-research-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start
    restart: unless-stopped
    networks:
      - stock-research-network

volumes:
  redis_data:
    driver: local

networks:
  stock-research-network:
    driver: bridge